---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro:assets';
interface Props {
    imageBefore?: ImageMetadata;
    imageAfter?: ImageMetadata;
}
const {imageBefore, imageAfter} = Astro.props;
const hasImages = imageBefore && imageAfter;
---
<div class:list={["spoiler-container my-8",hasImages && "md:flex md:gap-8"]}>
    {hasImages && (
        <div class="md:w-1/3 mb-4 md:mb-0">
            <div class="relative aspect-[3/4] rounded-lg overflow-hidden shadow-lg">
                <Image id="image-before" src={imageBefore} alt="Before the play." width={600} height={800} class="absolute inset-0 w-full h-full object-cover" />
                <Image id="image-after" src={imageAfter} alt="After the play." width={600} height={800} class="absolute inset-0 w-full h-full object-cover" />
            </div>
            <div class="flex items-center justify-center gap-2 mt-3">
                <button id="toggle-before" class="image-toggle">Inicio</button>
                <button id="toggle-after" class="image-toggle">Fin</button>
            </div>
        </div>
        )}
    <div class:list={["spoiler-content relative cursor-pointer group",hasImages ? "md:w-2/3" : "w-full"]}>
        <div class="relative text-brand-text/80 px-4 py-2 rounded-full text-center">
          Â¡Review con spoilers!
        </div>
        <div class="absolute inset-0 flex items-center justify-center pointer-events-none">
            <div class="prompt bg-brand-peach/20 text-brand-text/80 px-4 py-2 rounded-full text-center duration-300 group-hover:bg-brand-peach/60 group-hover:transition-colors">
                Haz clic para revelar el texto
            </div>
        </div>
        <div class="blur-sm transition-all duration-300">
            <slot />
        </div>
    </div>
  </div>
</div>

<script>
  function setupSpoilers() {
    document.querySelectorAll('.spoiler-container').forEach(container => {
    if (container.hasAttribute('data-initialized')) return;
    container.setAttribute('data-initialized', 'true');

    const reviewContent = container.querySelector('.spoiler-content');
    const toggleBefore = container.querySelector('#toggle-before');
    const toggleAfter = container.querySelector('#toggle-after');

    if (reviewContent){
        reviewContent.addEventListener('click', () => {
            container.classList.add('text-revealed');
            if (toggleAfter) {
            container.classList.add('image-after-active');
            }
        }, { once: true });
    }

    if (toggleBefore && toggleAfter) {
    toggleBefore.addEventListener('click', (e) => {
        e.stopPropagation();
        container.classList.remove('image-after-active');
    });

    toggleAfter.addEventListener('click', (e) => {
        e.stopPropagation();
        container.classList.add('image-after-active');
    });
    }
    });
  }

  document.addEventListener('astro:page-load', setupSpoilers);
  setupSpoilers();
</script>

<style>
  .spoiler-container #image-after {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }
  .spoiler-container.image-after-active #image-after {
    opacity: 1;
  }
  .spoiler-container.text-revealed .spoiler-content .blur-sm {
    filter: none;
  }
  .spoiler-container.text-revealed .spoiler-content .prompt {
    opacity: 0;
  }
  .spoiler-container.text-revealed .spoiler-content {
    cursor: default; 
  }
  .image-toggle {
    @apply font-sans text-sm font-bold py-1 px-4 rounded-full border-2 border-brand-peach transition-colors;
  }
  .image-toggle#toggle-before {
    @apply bg-brand-peach text-brand-dark;
  }
  .image-toggle#toggle-after {
    @apply bg-transparent text-brand-text;
  }
  .spoiler-container.image-after-active .image-toggle#toggle-before {
    @apply bg-transparent text-brand-text;
  }
  .spoiler-container.image-after-active .image-toggle#toggle-after {
    @apply bg-brand-peach text-brand-dark;
  }
</style>